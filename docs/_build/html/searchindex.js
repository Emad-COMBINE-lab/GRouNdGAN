Search.setIndex({"docnames": ["causal_gan_cfg", "citation", "custom_parser", "docker", "factory", "gans", "index", "installation", "layers", "license", "local_installation", "main", "modules", "networks", "preprocessing", "sc_dataset", "singularity", "tfrecord_loader", "tree", "tutorial"], "filenames": ["causal_gan_cfg.rst", "citation.rst", "custom_parser.rst", "docker.rst", "factory.rst", "gans.rst", "index.rst", "installation.rst", "layers.rst", "license.rst", "local_installation.rst", "main.rst", "modules.rst", "networks.rst", "preprocessing.rst", "sc_dataset.rst", "singularity.rst", "tfrecord_loader.rst", "tree.rst", "tutorial.rst"], "titles": ["&lt;no title&gt;", "Citation", "custom_parser module", "Docker Setup", "factory module", "gans package", "Welcome to GRouNdGAN\u2019s documentation!", "Installation", "layers package", "License", "Local Installation", "main module", "API References", "networks package", "preprocessing package", "sc_dataset module", "Singularity Setup", "tfrecord_loader module", "&lt;no title&gt;", "Tutorial"], "terms": {"experi": [0, 6, 7, 19], "output": [0, 5, 8, 13, 19], "directori": [0, 3, 5, 7, 10, 16, 19], "result": [0, 18, 19], "groundgan": [0, 1, 3, 7, 9, 10, 14, 16, 19], "devic": [0, 3, 5, 7, 8, 13, 19], "cuda": [0, 3, 5, 7, 8, 13, 16, 19], "we": [0, 6, 7, 10, 13, 19], "let": [0, 6, 19], "program": [0, 2, 19], "choos": [0, 7, 19], "what": [0, 19], "i": [0, 3, 4, 5, 6, 7, 8, 9, 13, 15, 17, 19], "avail": [0, 19], "checkpoint": [0, 5, 13, 19], "set": [0, 5, 7, 8, 10, 13, 19], "valu": [0, 5, 8, 17, 19], "us": [0, 1, 5, 6, 8, 9, 10, 13, 14, 15, 16, 17, 19], "train": [0, 4, 5, 8, 12, 13, 15, 17, 18], "model": [0, 4, 5, 6, 19], "preprocess": [0, 6, 12, 15, 17], "10x": [0, 19], "true": [0, 8, 17, 19], "raw": [0, 18, 19], "data": [0, 1, 5, 6, 8, 13, 15, 17, 18, 19], "pbmc": [0, 17, 18, 19], "valid": [0, 5, 13, 15, 19], "size": [0, 5, 8, 13, 15, 17, 19], "1000": [0, 13, 19], "test": [0, 15, 19], "annot": [0, 19], "barcodes_annot": [0, 19], "tsv": [0, 19], "min": [0, 19], "cell": [0, 1, 5, 6, 8, 13, 15, 17], "3": [0, 5, 7, 8, 9, 10, 13, 19], "gene": [0, 5, 6, 8, 13, 15, 17, 19], "express": [0, 5, 8, 13, 15, 17, 19], "less": [0, 19], "than": [0, 5, 19], "ar": [0, 5, 7, 8, 13, 19], "discard": [0, 19], "10": [0, 1, 6, 13, 19], "librari": [0, 8, 13, 19], "20000": [0, 5, 19], "normal": [0, 5, 8, 19], "louvain": [0, 19], "re": [0, 3, 6, 7, 8, 10, 19], "0": [0, 3, 5, 7, 8, 19], "15": [0, 3, 7, 19], "cluster": [0, 5, 7, 13, 15, 17, 19], "resolut": [0, 19], "higher": [0, 19], "mean": [0, 19], "find": [0, 5, 6, 19], "more": [0, 6, 9, 17, 19], "smaller": [0, 19], "highli": [0, 19], "variabl": [0, 5, 13, 19], "number": [0, 5, 8, 13, 15, 17, 19], "identifi": [0, 19], "grn": [0, 1, 14], "prepar": [0, 19], "tf": [0, 5, 13, 19], "homo_sapiens_tf": [0, 18, 19], "csv": [0, 18, 19], "k": [0, 19], "top": [0, 19], "most": [0, 7, 19], "import": [0, 19], "per": [0, 5, 8, 13, 19], "includ": [0, 3, 7, 13, 19], "infer": [0, 5, 8, 13, 14, 19], "process": [0, 3, 7, 15, 18, 19], "inferred_grnboost2": [0, 19], "pbmc68k_train": [0, 19], "h5ad": [0, 15, 19], "pbmc68k_valid": [0, 19], "pbmc68k_test": [0, 19], "causal": [0, 1, 5, 6, 13, 14, 19], "graph": [0, 5, 13, 14, 19], "causal_graph": [0, 5, 13, 19], "pkl": [0, 19], "gener": [0, 1, 5, 6, 8, 9, 12, 18, 19], "10000": [0, 5, 19], "type": [0, 2, 3, 4, 5, 7, 8, 13, 15, 17, 19], "gan": [0, 4, 6, 8, 12, 13, 18, 19], "nois": [0, 5, 13, 19], "1": [0, 5, 7, 8, 13, 19], "depth": [0, 5, 13, 19], "width": [0, 5, 13, 19], "2": [0, 5, 7, 8, 13, 19], "critic": [0, 5, 12, 19], "layer": [0, 5, 6, 12, 13, 19], "1024": [0, 19], "512": [0, 19], "256": [0, 19], "label": [0, 5, 8, 12, 15, 17, 19], "2000": [0, 19], "latent": [0, 5, 13, 19], "dim": [0, 8, 19], "128": [0, 19], "vector": [0, 5, 13, 19], "dimens": [0, 5, 13, 19], "umi": [0, 19], "count": [0, 5, 8, 13, 19], "lambda": [0, 19], "regular": [0, 5, 19], "hyper": [0, 5, 19], "paramet": [0, 4, 5, 8, 13, 14, 15, 17, 19], "gradient": [0, 5, 8, 13, 19], "penalti": [0, 5, 19], "batch": [0, 5, 8, 15, 17, 19], "iter": [0, 5, 15, 17, 19], "5": [0, 5, 13, 19], "each": [0, 5, 8, 13, 15, 17, 19], "maximum": [0, 5, 19], "step": [0, 5, 6, 14], "1000000": [0, 19], "antilabel": [0, 19], "interv": [0, 19], "optim": [0, 5, 19], "coeffici": [0, 5, 19], "comput": [0, 3, 5, 7, 8, 19], "run": [0, 3, 5, 8, 19], "averag": [0, 5, 19], "its": [0, 3, 5, 7, 8, 13, 19], "squar": [0, 5, 19], "beta1": [0, 5, 19], "beta2": [0, 5, 19], "9": [0, 7, 10, 19], "learn": [0, 5, 19], "rate": [0, 5, 19], "initi": [0, 2, 4, 5, 8, 19], "001": [0, 19], "final": [0, 5, 13, 19], "0001": [0, 19], "log": [0, 5, 19], "summari": [0, 5, 19], "frequenc": [0, 19], "plot": [0, 5, 19], "save": [0, 5, 8, 19], "100000": [0, 19], "cc": [0, 19], "non": [0, 5, 8, 13, 19], "condit": [0, 5, 8, 13, 19], "singl": [0, 1, 5, 6, 8, 13, 17], "rna": [0, 1, 5, 6, 19], "seq": [0, 1, 5, 6, 15, 19], "hardcod": [0, 19], "none": [0, 4, 5, 8, 13, 14, 15, 17, 19], "code": [0, 6, 19], "200000": [0, 19], "00001": [0, 19], "yazdan": [1, 6, 9], "zinati": [1, 6, 9], "abdulrahman": [1, 9], "takiddeen": [1, 6, 9], "amin": [1, 9], "emad": [1, 3, 6, 7, 9, 10], "guid": [1, 6, 7, 16, 19], "simul": [1, 6], "adversari": [1, 6, 19], "network": [1, 5, 6, 8, 12, 19], "biorxiv": [1, 6], "2023": [1, 6, 9], "07": [1, 6], "http": [1, 3, 7, 8, 9, 10, 19], "doi": [1, 6, 19], "org": [1, 8, 9, 19], "1101": [1, 6], "25": [1, 6], "550225": [1, 6], "articl": 1, "zinati2023groundgan": 1, "titl": 1, "author": 1, "journal": 1, "page": [1, 6], "year": 1, "publish": [1, 9], "cold": 1, "spring": 1, "harbor": 1, "laboratori": 1, "get_configpars": [2, 12], "configpars": [2, 4, 14, 19], "sourc": [2, 4, 5, 7, 8, 10, 13, 14, 15, 17], "configur": [2, 7, 19], "read": [2, 15, 17], "config": [2, 4, 6, 14, 18], "file": [2, 4, 5, 6, 7, 10, 14, 15, 17], "cfg": [2, 4, 14, 18, 19], "ini": [2, 19], "parser": [2, 4, 14], "return": [2, 4, 5, 8, 13, 15, 17], "get_argpars": [2, 12], "argumentpars": 2, "argument": [2, 5, 8, 13, 19], "add": [2, 5], "arg": [2, 5, 8, 13], "cli": [2, 6], "argpars": 2, "prerequisit": [3, 7, 10], "befor": [3, 7, 10, 13], "you": [3, 6, 7, 8, 9, 10, 16, 19], "begin": [3, 7], "make": [3, 7], "sure": [3, 7], "have": [3, 7, 8, 9, 10, 19], "instal": [3, 6, 16, 19], "your": [3, 7, 8, 9, 10, 16, 19], "machin": [3, 7], "can": [3, 5, 6, 7, 8, 9, 10, 13, 16, 17, 19], "download": [3, 7, 19], "offici": [3, 7], "websit": [3, 7], "get": [3, 5, 7, 10], "start": [3, 7, 16, 19], "pull": [3, 7, 16], "hub": [3, 7, 16], "yazdanz": [3, 7, 16], "4b98686": [3, 7, 16], "contain": [3, 4, 5, 8, 13, 14, 17, 19], "pass": [3, 7, 8, 13, 17], "all": [3, 7, 8, 13, 19], "bin": [3, 7, 10], "bash": [3, 7, 19], "The": [3, 5, 7, 8, 13, 16, 17, 19], "flag": [3, 7, 16, 19], "enabl": [3, 7, 16], "support": [3, 5, 7, 8, 13, 19], "within": [3, 7, 8, 16], "omit": [3, 7], "intend": [3, 7, 8], "cpu": [3, 5, 7, 8, 13], "onli": [3, 5, 7, 8, 13, 19], "allow": [3, 7], "an": [3, 5, 6, 7, 8, 13, 15, 16, 17, 19], "interact": [3, 7, 16], "termin": [3, 7], "session": [3, 7, 16], "now": [3, 5, 7, 10], "insid": [3, 7, 16, 19], "readi": [3, 7, 10], "clone": [3, 7, 10], "repositori": [3, 6, 7, 10], "git": [3, 7, 10, 18, 19], "github": [3, 6, 7, 10, 18, 19], "com": [3, 7, 10], "combin": [3, 7, 9, 10], "lab": [3, 7, 9, 10], "navig": [3, 7, 10], "project": [3, 5, 6, 7, 10, 13], "cd": [3, 7, 10], "provid": [3, 7, 15, 17, 19], "t": [3, 5, 6, 7, 8, 19], "yourusernam": [3, 7], "custom": [3, 7, 8], "f": [3, 7, 19], "thi": [3, 4, 5, 6, 7, 8, 13, 16, 19], "command": [3, 7, 16, 19], "tag": [3, 7], "method": [3, 5, 6, 7, 8, 13, 19], "mai": [3, 7], "take": [3, 7, 8, 19], "approxim": [3, 7], "30": [3, 7], "minut": [3, 7], "depend": [3, 7, 10, 19], "system": [3, 7, 16], "": [3, 5, 7, 8, 9, 13, 16, 17, 19], "perform": [3, 7, 8, 13], "itd": [3, 7], "name": [3, 5, 7, 16, 17], "recogn": [3, 7], "nvidia": [3, 7, 19], "smi": [3, 7], "should": [3, 7, 8, 9, 17, 19], "see": [3, 7, 9, 19], "detail": [3, 6, 7, 9, 10], "inform": [3, 7, 8], "about": [3, 6, 7, 19], "memori": [3, 7, 19], "usag": [3, 7, 19], "etc": [3, 7, 19], "confirm": [3, 7], "470": [3, 7], "63": [3, 7, 19], "01": [3, 7], "driver": [3, 7], "version": [3, 7, 9, 10], "11": [3, 7, 19], "4": [3, 5, 7, 8, 13, 19], "persist": [3, 7], "m": [3, 7, 10, 19], "bu": [3, 7], "id": [3, 7], "disp": [3, 7], "volatil": [3, 7], "uncorr": [3, 7], "ecc": [3, 7], "fan": [3, 7], "temp": [3, 7], "perf": [3, 7], "pwr": [3, 7], "cap": [3, 7], "util": [3, 7], "mig": [3, 7], "tesla": [3, 7], "v100": [3, 7], "sxm2": [3, 7], "off": [3, 7], "00000000": [3, 7], "00": [3, 7], "1e": [3, 7], "n": [3, 7, 19], "33c": [3, 7], "p0": [3, 7], "41w": [3, 7], "300w": [3, 7], "0mib": [3, 7], "32480mib": [3, 7], "default": [3, 5, 7, 8, 13, 17, 19], "gi": [3, 7], "ci": [3, 7], "pid": [3, 7], "No": [3, 7], "found": [3, 7, 10], "parse_list": [4, 12], "str_list": 4, "str": [4, 5, 8, 13, 15, 17], "type_": 4, "list": [4, 5, 13, 17], "class": [4, 5, 8, 13, 15], "iganfactori": [4, 12], "base": [4, 5, 8, 13, 15], "abc": [4, 5], "repres": [4, 5, 8, 13, 17], "doe": 4, "keep": 4, "creat": [4, 5, 7, 10, 13, 15, 16, 17, 19], "refer": [4, 6], "__init__": [4, 5, 8, 12, 13, 15], "param": [4, 14], "abstract": 4, "get_gan": [4, 12], "instanc": [4, 8], "get_train": [4, 12], "callabl": [4, 8, 13], "function": [4, 5, 8, 13, 17], "_abc_impl": [4, 5, 12], "_abc": [4, 5], "_abc_data": [4, 5], "object": [4, 5], "ganfactori": [4, 12], "conditionalcatganfactori": [4, 12], "conditionalcatgan": [4, 5, 12], "conditionalprojganfactori": [4, 12], "conditionalprojgan": [4, 5, 12], "causalganfactori": [4, 12], "get_cc": [4, 12], "causalgan": [4, 5, 12], "get_factori": [4, 12], "kei": [4, 17, 19], "specifi": [4, 5, 8, 13, 15, 17, 19], "rais": [4, 5], "valueerror": [4, 5], "If": [4, 5, 6, 7, 8, 9, 10, 15, 17, 19], "unknown": 4, "implement": [4, 8, 13, 19], "genes_no": [5, 17], "int": [5, 8, 13, 15, 17, 19], "batch_siz": [5, 15, 17], "latent_dim": 5, "noise_per_gen": [5, 13], "depth_per_gen": [5, 13], "width_per_gen": 5, "cc_latent_dim": 5, "cc_layer": 5, "cc_pretrained_checkpoint": 5, "crit_lay": 5, "dict": [5, 8, 13, 17], "labeler_lay": [5, 13], "library_s": [5, 8, 13], "todo": 5, "uniqu": 5, "dataset": [5, 6, 13, 15, 17], "space": [5, 13], "from": [5, 8, 10, 13, 15, 16, 17, 19], "which": [5, 7, 8, 13, 19], "control": [5, 7, 13, 19], "sampl": [5, 13, 15, 19], "target": [5, 13, 19], "scale": [5, 8, 13], "integ": [5, 13], "correspond": [5, 8, 13], "neuron": [5, 8, 13], "path": [5, 15, 17, 19], "pretrain": [5, 13], "dictionari": [5, 13, 17, 19], "trn": [5, 13], "impos": [5, 13, 14], "It": [5, 7, 8, 13, 19], "ha": [5, 8, 13], "follow": [5, 8, 13, 19], "format": [5, 13, 19], "index": [5, 6, 13, 15, 17, 19], "tf1": [5, 13, 19], "tf2": [5, 13, 19], "acycl": [5, 13], "bipartit": [5, 13, 19], "A": [5, 6, 8, 9, 13, 19], "cannot": [5, 13], "regul": [5, 13, 19], "anoth": [5, 13], "invalid": [5, 13], "6": [5, 7, 10, 13, 19], "also": [5, 7, 8, 10, 13, 19], "cycl": [5, 13], "exampl": [5, 8, 13], "option": [5, 8, 9, 10, 13, 15, 17, 19], "torch": [5, 8, 13, 15], "is_avail": [5, 8, 13], "els": [5, 8, 13], "total": [5, 8, 13], "_build_model": [5, 12], "instanti": 5, "_save": [5, 12], "byte": [5, 15, 17], "pathlik": [5, 15], "union": [5, 13, 15, 17], "o": [5, 15], "_load": [5, 12], "mode": [5, 8], "load": [5, 15], "pth": [5, 19], "other": [5, 8], "_train_label": [5, 12], "real_cel": 5, "tensor": [5, 8, 13, 15], "real": [5, 13, 19], "fake": [5, 13], "anti": 5, "_train_gener": [5, 12], "one": [5, 8, 19], "item": 5, "loss": 5, "rtype": 5, "train_fil": 5, "valid_fil": 5, "critic_it": 5, "max_step": 5, "c_lambda": 5, "float": [5, 17], "gen_alpha_0": 5, "gen_alpha_fin": 5, "crit_alpha_0": 5, "crit_alpha_fin": 5, "labeler_alpha": 5, "antilabeler_alpha": 5, "labeler_training_interv": 5, "output_dir": 5, "summary_freq": 5, "5000": 5, "plt_freq": 5, "save_feq": 5, "tfrecord": [5, 17], "after": [5, 7, 8, 13, 16], "20": [5, 19], "everi": [5, 8, 19], "resum": [5, 19], "tfevent": 5, "period": 5, "between": [5, 7, 13, 16], "tensorboard": [5, 19], "sne": [5, 19], "conditionalgan": [5, 12], "gen_lay": [5, 13], "static": [5, 8, 13], "_sample_pseudo_label": [5, 12], "cluster_ratio": 5, "randomli": 5, "multinomi": 5, "distribut": [5, 9], "equal": 5, "ex": [5, 17], "occur": 5, "probabl": 5, "respect": 5, "_generate_tsne_plot": [5, 12], "valid_load": 5, "dataload": [5, 15, 17], "dure": [5, 8, 13], "num_class": [5, 8, 13], "label_ratio": 5, "concaten": 5, "ratio": 5, "_get_gradi": [5, 12], "epsilon": 5, "kwarg": [5, 8, 13], "score": 5, "interpol": 5, "uniformli": 5, "random": 5, "proport": 5, "length": [5, 13], "arbitrari": [5, 8, 13], "keyword": [5, 13], "_cat_one_hot_label": [5, 12], "hot": 5, "encod": 5, "tail": 5, "generate_cel": [5, 12], "cells_no": 5, "class_": 5, "tupl": [5, 8, 13, 15], "ndarrai": 5, "same": [5, 8], "matrix": [5, 13, 17, 19], "np": 5, "_train_crit": [5, 12], "real_label": 5, "_generate_nois": [5, 12], "given": [5, 8, 15, 17], "fill": 5, "standard": 5, "_set_exponential_lr": [5, 12], "alpha_0": 5, "alpha_fin": 5, "exponentiallr": 5, "up": [5, 7, 10], "exponenti": 5, "decai": 5, "schedul": 5, "when": [5, 17], "current_step": 5, "call": [5, 8], "loop": [5, 13], "_critic_loss": [5, 12], "crit_fake_pr": 5, "crit_real_pr": 5, "gp": 5, "unweight": 5, "wgan": 5, "current": [5, 8, 17], "_generator_loss": [5, 12], "_gradient_penalti": [5, 12], "_get_load": [5, 12], "validation_fil": 5, "_add_tensorboard_graph": [5, 12], "gen_data": 5, "crit_data": 5, "input": [5, 8, 13, 19], "_update_tensorboard": [5, 12], "gen_loss": 5, "crit_loss": 5, "gen_lr": 5, "crit_lr": 5, "updat": [5, 13], "site": 6, "releas": 6, "under": [6, 9, 19], "regulatori": [6, 13, 19], "implicit": [6, 19], "silico": 6, "perturb": [6, 8, 19], "To": [6, 8, 19], "out": 6, "check": 6, "our": [6, 7, 10, 19], "preprint": 6, "y": [6, 8, 19], "docker": [6, 18, 19], "setup": 6, "local": [6, 19], "singular": [6, 19], "tutori": 6, "outlin": 6, "demo": 6, "citat": 6, "bibtex": 6, "licens": [6, 18, 19], "here": [6, 19], "help": [6, 19], "ask": 6, "ani": [6, 8, 9, 13, 19], "whether": [6, 8, 17], "thei": [6, 8], "how": 6, "softwar": [6, 9], "troubleshoot": 6, "understand": 6, "certain": 6, "concept": 6, "pleas": 6, "don": [6, 19], "hesit": 6, "report": 6, "encount": 6, "issu": 6, "glitch": 6, "unexpect": 6, "behavior": 6, "while": [6, 8], "u": 6, "know": [6, 7], "improv": 6, "reach": 6, "open": [6, 19], "api": 6, "factori": [6, 12], "modul": [6, 12, 19], "packag": [6, 12], "main": [6, 12, 19], "custom_pars": [6, 12], "sc_dataset": [6, 12], "tfrecord_load": [6, 12], "search": 6, "There": [7, 16, 19], "multipl": [7, 10, 17, 19], "wai": 7, "prefer": 7, "requir": [7, 8, 10, 13, 18, 19], "best": 7, "suit": 7, "need": [7, 8, 13, 19], "want": [7, 19], "quick": 7, "hassl": 7, "free": [7, 9], "environ": [7, 10], "alreadi": [7, 16], "conveni": 7, "straightforward": 7, "further": [7, 13], "finetun": 7, "specif": [7, 10], "advantag": 7, "exactli": 7, "being": [7, 13], "ideal": 7, "fine": 7, "grain": 7, "modif": 7, "greater": 7, "over": [7, 15, 17, 19], "opt": [7, 19], "particularli": 7, "plan": 7, "foundat": [7, 9], "new": 7, "hpc": 7, "restrict": 7, "gain": 7, "root": 7, "access": 7, "host": [7, 19], "secur": 7, "compat": [7, 8], "altern": 7, "container": 7, "ensur": [7, 10], "python": [7, 10, 19], "do": [7, 10, 19], "pyenv": [7, 10], "manag": [7, 10], "instruct": [7, 10], "variou": [7, 10], "platform": [7, 10], "document": [7, 10, 18, 19], "choic": [7, 10, 19], "scgan": [7, 10, 17, 18, 19], "beelin": [7, 10, 18, 19], "scdesign2": [7, 10, 18, 19], "sparsim": [7, 10, 18, 19], "submodul": [7, 10, 12], "studi": [7, 8, 10], "recurs": [7, 10], "virtual": [7, 10], "venv": [7, 10], "activ": [7, 10], "linux": [7, 10], "maco": [7, 10], "window": [7, 10], "script": [7, 10, 15, 18, 19], "txt": [7, 10, 18, 19], "pip": [7, 10], "r": [7, 8, 10, 19], "fellow": [7, 10], "canadian": [7, 10], "computecanada": [7, 10, 19], "consid": [7, 10], "requirements_computecanada": [7, 10, 18, 19], "instead": [7, 8, 10, 13, 19], "sif": [7, 16], "shell": [7, 16], "nv": [7, 16], "applic": [7, 16, 19], "might": [7, 16], "differ": [7, 16, 19], "structur": [7, 16, 19], "permiss": [7, 16], "due": [7, 16], "bind": [7, 16], "mount": [7, 16], "approach": [7, 16], "conditionalbatchnorm": [8, 12], "num_featur": 8, "1d": 8, "dumoulin": 8, "et": [8, 13, 17, 19], "al": [8, 13, 17, 19], "2016": 8, "de": 8, "vri": 8, "2017": [8, 19], "featur": [8, 17], "e": [8, 19], "distinct": 8, "forward": [8, 12, 13], "x": 8, "condition": 8, "bool": [8, 13, 17], "_paramet": [8, 12, 13], "_buffer": [8, 12, 13], "_non_persistent_buffers_set": [8, 12, 13], "_backward_hook": [8, 12, 13], "_is_full_backward_hook": [8, 12, 13], "_forward_hook": [8, 12, 13], "_forward_pre_hook": [8, 12, 13], "_state_dict_hook": [8, 12, 13], "_load_state_dict_pre_hook": [8, 12, 13], "_load_state_dict_post_hook": [8, 12, 13], "_modul": [8, 12, 13], "in_": 8, "reuse_scal": 8, "fals": [8, 13, 17, 19], "complet": [8, 13, 19], "previou": [8, 19], "By": 8, "maskedlinearfunct": [8, 12], "autograd": 8, "mask": [8, 13], "weight": [8, 13, 19], "ctx": 8, "bia": 8, "oper": [8, 13], "overridden": 8, "subclass": 8, "must": [8, 19], "accept": [8, 19], "context": 8, "first": 8, "store": 8, "retriev": [8, 13], "backward": [8, 12], "directli": 8, "though": 8, "enforc": [8, 13], "either": [8, 9, 17, 19], "save_for_backward": 8, "equival": 8, "vjp": 8, "save_for_forward": 8, "jvp": 8, "grad_output": 8, "defin": [8, 19], "formula": 8, "differenti": 8, "automat": 8, "alia": 8, "mani": 8, "were": 8, "w": 8, "grad": 8, "just": 8, "attribut": 8, "needs_input_grad": 8, "boolean": 8, "g": [8, 19], "_backward_cl": [8, 12], "maskedlinearfunctionbackward": 8, "maskedlinear": [8, 12, 13], "extens": 8, "pytorch": [8, 17], "linear": [8, 13], "thread": 8, "discuss": 8, "connect": [8, 13], "neural": 8, "3027": 8, "13": 8, "shape": [8, 13], "n_input_featur": [8, 13], "n_output_featur": [8, 13], "element": 8, "declar": 8, "un": 8, "reapply_mask": [8, 12], "been": 8, "nn": [8, 13], "init": 8, "reappli": 8, "reset_paramet": [8, 12], "although": 8, "recip": 8, "afterward": 8, "sinc": [8, 13], "former": 8, "care": 8, "regist": 8, "hook": 8, "latter": 8, "silent": 8, "ignor": 8, "them": [8, 19], "extra_repr": [8, 12], "extra": 8, "represent": 8, "print": 8, "own": [8, 19], "both": 8, "line": [8, 19], "multi": [8, 19], "string": 8, "copyright": 9, "c": [9, 19], "redistribut": 9, "modifi": [9, 13, 17, 19], "term": 9, "gnu": 9, "affero": 9, "public": 9, "later": 9, "hope": 9, "without": 9, "warranti": 9, "even": 9, "impli": 9, "merchant": 9, "fit": 9, "FOR": 9, "particular": 9, "purpos": 9, "receiv": 9, "copi": [9, 19], "along": 9, "www": 9, "causal_gan": [12, 18, 19], "conditional_gan": [12, 18, 19], "conditional_gan_cat": 12, "conditional_gan_proj": 12, "content": 12, "cbn": 12, "lsn": [12, 13], "masked_linear": 12, "_create_crit": [12, 13], "_create_critic_block": [12, 13], "conditionalcrit": [12, 13], "conditionalcriticproj": [12, 13], "_create_gener": [12, 13], "_create_generator_block": [12, 13], "conditionalgener": [12, 13], "_create_label": [12, 13], "masked_causal_gener": 12, "causalgener": [12, 13], "freeze_causal_control": [12, 13], "grn_creation": 12, "create_grn": [12, 14, 19], "scdataset": [12, 15], "__getitem__": [12, 15], "__len__": [12, 15], "get_load": [12, 15, 17], "x_input": 13, "critic_lay": 13, "constructor": 13, "hidden": 13, "dimension": 13, "input_dim": 13, "output_dim": 13, "final_lay": 13, "sequenti": 13, "sequenc": 13, "block": 13, "relu": 13, "except": 13, "indic": [13, 17, 19], "discrimin": 13, "miyato": 13, "2018": [13, 19], "marouf": [13, 17, 19], "2020": [13, 17, 19], "z_input": 13, "output_cells_dim": 13, "batchnorm": 13, "num_gen": 13, "num_tf": 13, "exclud": 13, "transcript": [13, 19], "factor": 13, "deep": 13, "target_gen": 13, "regress": 13, "predict": 13, "width_scale_per_gen": 13, "causal_control": 13, "22": 13, "assum": 13, "spars": 13, "22000": 13, "remov": 13, "howev": [13, 19], "independ": 13, "In": 13, "case": 13, "would": 13, "individu": [13, 19], "veri": [13, 19], "ineffici": 13, "larg": 13, "logic": 13, "done": [13, 19], "two": [13, 19], "freez": 13, "disallow": 13, "grnboost2": [14, 19], "construct": [14, 17, 19], "onto": [14, 19], "creation": 14, "appli": 14, "py": [15, 19], "file_path": [15, 17], "iterableload": [15, 17], "scrna": 15, "entir": 15, "loader": [15, 17], "split": 17, "descript": 17, "compression_typ": 17, "gzip": 17, "multi_read": 17, "get_clust": 17, "post_process": 17, "accommod": 17, "pattern": 17, "pair": [17, 19], "where": [17, 19], "determin": 17, "contribut": 17, "extract": 17, "record": 17, "compress": 17, "addit": [17, 19], "gitattribut": [18, 19], "workflow": [18, 19], "build": [18, 19], "yml": [18, 19], "yaml": [18, 19], "gitignor": [18, 19], "gitmodul": [18, 19], "atkinson_hyperleg": [18, 19], "readm": [18, 19], "md": [18, 19], "interim": [18, 19], "bonemarrow": [18, 19], "mus_musculus_tf": [18, 19], "dockerfil": [18, 19], "doc": [18, 19], "notebook": [18, 19], "monitor": [18, 19], "sh": [18, 19], "src": [18, 19], "come": 19, "interfac": 19, "section": 19, "desir": 19, "python3": 19, "through": 19, "h": 19, "benchmark": 19, "cwgan": 19, "unoffici": 19, "cscgan": 19, "appropri": 19, "essenti": 19, "four": 19, "hyperparamet": 19, "Or": 19, "chain": 19, "togeth": 19, "go": 19, "syntax": 19, "similar": 19, "three": 19, "consist": 19, "isn": 19, "sensit": 19, "still": 19, "advis": 19, "below": 19, "pbmc68k": 19, "imag": 19, "prepackag": 19, "unprocess": 19, "mous": 19, "paul": 19, "2015": 19, "human": 19, "zheng": 19, "animaltfdb": 19, "place": 19, "too": 19, "hard": 19, "curl": 19, "tar": 19, "nextcloud": 19, "ca": 19, "php": 19, "wqrcqkh5zjyymw9": 19, "demo_data": 19, "xvf": 19, "mv": 19, "rm": 19, "rf": 19, "skip": 19, "pipelin": 19, "like": 19, "mtx": 19, "barcod": 19, "leav": 19, "empti": 19, "Then": 19, "onc": 19, "success": 19, "messag": 19, "moerman": 19, "convert": 19, "wa": 19, "write": 19, "properti": 19, "dask": 19, "client": 19, "pars": 19, "partit": 19, "shut": 19, "down": 19, "finish": 19, "937": 19, "possibl": 19, "edg": 19, "59031": 19, "14055": 19, "densiti": 19, "238095": 19, "written": 19, "For": 19, "corespond": 19, "pictur": 19, "abov": 19, "form": 19, "g2": 19, "tfn": 19, "g1": 19, "gn": 19, "g3": 19, "becom": 19, "pickl": 19, "wb": 19, "fp": 19, "dump": 19, "protocol": 19, "highest_protocol": 19, "forget": 19, "edit": 19, "direct": 19, "appear": 19, "part": 19, "biolog": 19, "meaning": 19, "significantli": 19, "relationship": 19, "those": 19, "observ": 19, "deterior": 19, "qualiti": 19, "realist": 19, "datapoint": 19, "act": 19, "contradictori": 19, "task": 19, "upon": 19, "folder": 19, "state": 19, "bias": 19, "tsne": 19, "v": 19, "chang": 19, "logdir": 19, "dir": 19, "load_fast": 19, "slurm": 19, "submiss": 19, "time": 19, "primarili": 19, "five": 19, "dai": 19, "dens": 19, "v100sxm2": 19, "16g": 19, "gpu": 19, "suggest": 19, "stick": 19, "avoid": 19, "excess": 19, "overhead": 19, "million": 19, "recommend": 19, "wish": 19, "One": 19, "popul": 19, "field": 19, "usual": 19, "latest": 19, "config_fil": 19, "machart": 19, "p": 19, "bansal": 19, "kilian": 19, "magrud": 19, "d": 19, "kreb": 19, "bonn": 19, "augment": 19, "natur": 19, "commun": 19, "1038": 19, "s41467": 19, "019": 19, "14018": 19, "z": 19, "arkin": 19, "giladi": 19, "jaitin": 19, "kenigsberg": 19, "keren": 19, "shaul": 19, "winter": 19, "lara": 19, "astiaso": 19, "guri": 19, "weiner": 19, "david": 19, "cohen": 19, "lauridsen": 19, "b": 19, "haa": 19, "schlitzer": 19, "mildner": 19, "ginhoux": 19, "jung": 19, "trumpp": 19, "tanai": 19, "heterogen": 19, "lineag": 19, "commit": 19, "myeloid": 19, "progenitor": 19, "163": 19, "7": 19, "1663": 19, "1677": 19, "1016": 19, "j": 19, "013": 19, "terri": 19, "belgrad": 19, "ryvkin": 19, "bent": 19, "wilson": 19, "ziraldo": 19, "wheeler": 19, "mcdermott": 19, "zhu": 19, "gregori": 19, "shuga": 19, "montesclaro": 19, "l": 19, "underwood": 19, "masqueli": 19, "nishimura": 19, "schnall": 19, "levin": 19, "wyatt": 19, "hindson": 19, "biela": 19, "massiv": 19, "parallel": 19, "digit": 19, "profil": 19, "8": 19, "ncomms14049": 19, "aibar": 19, "gonz\u00e1lez": 19, "bla": 19, "simm": 19, "moreau": 19, "aert": 19, "arboreto": 19, "effici": 19, "scalabl": 19, "bioinformat": 19, "35": 19, "12": 19, "2159": 19, "2161": 19, "1093": 19, "bty916": 19}, "objects": {"": [[2, 0, 0, "-", "custom_parser"], [4, 0, 0, "-", "factory"], [5, 0, 0, "-", "gans"], [8, 0, 0, "-", "layers"], [11, 0, 0, "-", "main"], [13, 0, 0, "-", "networks"], [14, 0, 0, "-", "preprocessing"], [15, 0, 0, "-", "sc_dataset"], [17, 0, 0, "-", "tfrecord_loader"]], "custom_parser": [[2, 1, 1, "", "get_argparser"], [2, 1, 1, "", "get_configparser"]], "factory": [[4, 2, 1, "", "CausalGANFactory"], [4, 2, 1, "", "ConditionalCatGANFactory"], [4, 2, 1, "", "ConditionalProjGANFactory"], [4, 2, 1, "", "GANFactory"], [4, 2, 1, "", "IGANFactory"], [4, 1, 1, "", "get_factory"], [4, 1, 1, "", "parse_list"]], "factory.CausalGANFactory": [[4, 3, 1, "", "_abc_impl"], [4, 4, 1, "", "get_cc"], [4, 4, 1, "", "get_gan"], [4, 4, 1, "", "get_trainer"]], "factory.ConditionalCatGANFactory": [[4, 3, 1, "", "_abc_impl"], [4, 4, 1, "", "get_gan"], [4, 4, 1, "", "get_trainer"]], "factory.ConditionalProjGANFactory": [[4, 3, 1, "", "_abc_impl"], [4, 4, 1, "", "get_gan"], [4, 4, 1, "", "get_trainer"]], "factory.GANFactory": [[4, 3, 1, "", "_abc_impl"], [4, 4, 1, "", "get_gan"], [4, 4, 1, "", "get_trainer"]], "factory.IGANFactory": [[4, 4, 1, "", "__init__"], [4, 3, 1, "", "_abc_impl"], [4, 4, 1, "", "get_gan"], [4, 4, 1, "", "get_trainer"]], "gans": [[5, 0, 0, "-", "causal_gan"], [5, 0, 0, "-", "conditional_gan"], [5, 0, 0, "-", "conditional_gan_cat"], [5, 0, 0, "-", "conditional_gan_proj"], [5, 0, 0, "-", "gan"]], "gans.causal_gan": [[5, 2, 1, "", "CausalGAN"]], "gans.causal_gan.CausalGAN": [[5, 4, 1, "", "__init__"], [5, 4, 1, "", "_build_model"], [5, 4, 1, "", "_load"], [5, 4, 1, "", "_save"], [5, 4, 1, "", "_train_generator"], [5, 4, 1, "", "_train_labelers"], [5, 4, 1, "", "train"]], "gans.conditional_gan": [[5, 2, 1, "", "ConditionalGAN"]], "gans.conditional_gan.ConditionalGAN": [[5, 3, 1, "", "_abc_impl"], [5, 4, 1, "", "_generate_tsne_plot"], [5, 4, 1, "", "_sample_pseudo_labels"]], "gans.conditional_gan_cat": [[5, 2, 1, "", "ConditionalCatGAN"]], "gans.conditional_gan_cat.ConditionalCatGAN": [[5, 4, 1, "", "__init__"], [5, 3, 1, "", "_abc_impl"], [5, 4, 1, "", "_build_model"], [5, 4, 1, "", "_cat_one_hot_labels"], [5, 4, 1, "", "_get_gradient"], [5, 4, 1, "", "_train_critic"], [5, 4, 1, "", "_train_generator"], [5, 4, 1, "", "generate_cells"]], "gans.conditional_gan_proj": [[5, 2, 1, "", "ConditionalProjGAN"]], "gans.conditional_gan_proj.ConditionalProjGAN": [[5, 4, 1, "", "__init__"], [5, 3, 1, "", "_abc_impl"], [5, 4, 1, "", "_build_model"], [5, 4, 1, "", "_get_gradient"], [5, 4, 1, "", "_train_critic"], [5, 4, 1, "", "_train_generator"], [5, 4, 1, "", "generate_cells"]], "gans.gan": [[5, 2, 1, "", "GAN"]], "gans.gan.GAN": [[5, 4, 1, "", "__init__"], [5, 4, 1, "", "_add_tensorboard_graph"], [5, 4, 1, "", "_build_model"], [5, 4, 1, "", "_critic_loss"], [5, 4, 1, "", "_generate_noise"], [5, 4, 1, "", "_generate_tsne_plot"], [5, 4, 1, "", "_generator_loss"], [5, 4, 1, "", "_get_gradient"], [5, 4, 1, "", "_get_loaders"], [5, 4, 1, "", "_gradient_penalty"], [5, 4, 1, "", "_load"], [5, 4, 1, "", "_save"], [5, 4, 1, "", "_set_exponential_lr"], [5, 4, 1, "", "_train_critic"], [5, 4, 1, "", "_train_generator"], [5, 4, 1, "", "_update_tensorboard"], [5, 4, 1, "", "generate_cells"], [5, 4, 1, "", "train"]], "layers": [[8, 0, 0, "-", "cbn"], [8, 0, 0, "-", "lsn"], [8, 0, 0, "-", "masked_linear"]], "layers.cbn": [[8, 2, 1, "", "ConditionalBatchNorm"]], "layers.cbn.ConditionalBatchNorm": [[8, 4, 1, "", "__init__"], [8, 3, 1, "", "_backward_hooks"], [8, 3, 1, "", "_buffers"], [8, 3, 1, "", "_forward_hooks"], [8, 3, 1, "", "_forward_pre_hooks"], [8, 3, 1, "", "_is_full_backward_hook"], [8, 3, 1, "", "_load_state_dict_post_hooks"], [8, 3, 1, "", "_load_state_dict_pre_hooks"], [8, 3, 1, "", "_modules"], [8, 3, 1, "", "_non_persistent_buffers_set"], [8, 3, 1, "", "_parameters"], [8, 3, 1, "", "_state_dict_hooks"], [8, 4, 1, "", "forward"], [8, 3, 1, "", "training"]], "layers.lsn": [[8, 2, 1, "", "LSN"]], "layers.lsn.LSN": [[8, 4, 1, "", "__init__"], [8, 3, 1, "", "_backward_hooks"], [8, 3, 1, "", "_buffers"], [8, 3, 1, "", "_forward_hooks"], [8, 3, 1, "", "_forward_pre_hooks"], [8, 3, 1, "", "_is_full_backward_hook"], [8, 3, 1, "", "_load_state_dict_post_hooks"], [8, 3, 1, "", "_load_state_dict_pre_hooks"], [8, 3, 1, "", "_modules"], [8, 3, 1, "", "_non_persistent_buffers_set"], [8, 3, 1, "", "_parameters"], [8, 3, 1, "", "_state_dict_hooks"], [8, 4, 1, "", "forward"], [8, 3, 1, "", "training"]], "layers.masked_linear": [[8, 2, 1, "", "MaskedLinear"], [8, 2, 1, "", "MaskedLinearFunction"]], "layers.masked_linear.MaskedLinear": [[8, 4, 1, "", "__init__"], [8, 3, 1, "", "_backward_hooks"], [8, 3, 1, "", "_buffers"], [8, 3, 1, "", "_forward_hooks"], [8, 3, 1, "", "_forward_pre_hooks"], [8, 3, 1, "", "_is_full_backward_hook"], [8, 3, 1, "", "_load_state_dict_post_hooks"], [8, 3, 1, "", "_load_state_dict_pre_hooks"], [8, 3, 1, "", "_modules"], [8, 3, 1, "", "_non_persistent_buffers_set"], [8, 3, 1, "", "_parameters"], [8, 3, 1, "", "_state_dict_hooks"], [8, 4, 1, "", "extra_repr"], [8, 4, 1, "", "forward"], [8, 4, 1, "", "reapply_mask"], [8, 4, 1, "", "reset_parameters"], [8, 3, 1, "", "training"]], "layers.masked_linear.MaskedLinearFunction": [[8, 3, 1, "", "_backward_cls"], [8, 4, 1, "", "backward"], [8, 4, 1, "", "forward"]], "networks": [[13, 0, 0, "-", "critic"], [13, 0, 0, "-", "generator"], [13, 0, 0, "-", "labeler"], [13, 0, 0, "-", "masked_causal_generator"]], "networks.critic": [[13, 2, 1, "", "ConditionalCritic"], [13, 2, 1, "", "ConditionalCriticProj"], [13, 2, 1, "", "Critic"]], "networks.critic.ConditionalCritic": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_critic"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.critic.ConditionalCriticProj": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_critic"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.critic.Critic": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_critic"], [13, 4, 1, "", "_create_critic_block"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.generator": [[13, 2, 1, "", "ConditionalGenerator"], [13, 2, 1, "", "Generator"]], "networks.generator.ConditionalGenerator": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_generator"], [13, 4, 1, "", "_create_generator_block"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.generator.Generator": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_generator"], [13, 4, 1, "", "_create_generator_block"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.labeler": [[13, 2, 1, "", "Labeler"]], "networks.labeler.Labeler": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_labeler"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 3, 1, "", "training"]], "networks.masked_causal_generator": [[13, 2, 1, "", "CausalGenerator"]], "networks.masked_causal_generator.CausalGenerator": [[13, 4, 1, "", "__init__"], [13, 3, 1, "", "_backward_hooks"], [13, 3, 1, "", "_buffers"], [13, 4, 1, "", "_create_generator"], [13, 4, 1, "", "_create_generator_block"], [13, 4, 1, "", "_create_labeler"], [13, 3, 1, "", "_forward_hooks"], [13, 3, 1, "", "_forward_pre_hooks"], [13, 3, 1, "", "_is_full_backward_hook"], [13, 3, 1, "", "_load_state_dict_post_hooks"], [13, 3, 1, "", "_load_state_dict_pre_hooks"], [13, 3, 1, "", "_modules"], [13, 3, 1, "", "_non_persistent_buffers_set"], [13, 3, 1, "", "_parameters"], [13, 3, 1, "", "_state_dict_hooks"], [13, 4, 1, "", "forward"], [13, 4, 1, "", "freeze_causal_controller"], [13, 3, 1, "", "training"]], "preprocessing": [[14, 0, 0, "-", "grn_creation"], [14, 0, 0, "-", "preprocess"]], "preprocessing.grn_creation": [[14, 1, 1, "", "create_GRN"]], "preprocessing.preprocess": [[14, 1, 1, "", "preprocess"]], "sc_dataset": [[15, 2, 1, "", "SCDataset"], [15, 1, 1, "", "get_loader"]], "sc_dataset.SCDataset": [[15, 4, 1, "", "__getitem__"], [15, 4, 1, "", "__init__"], [15, 4, 1, "", "__len__"]], "tfrecord_loader": [[17, 1, 1, "", "get_loader"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"citat": 1, "bibtex": 1, "custom_pars": 2, "modul": [2, 4, 5, 8, 11, 13, 14, 15, 17], "docker": [3, 7, 16], "setup": [3, 7, 16], "option": [3, 7], "A": [3, 7], "us": [3, 7], "pre": [3, 7], "built": [3, 7], "imag": [3, 7, 16], "recommend": [3, 7], "b": [3, 7], "build": [3, 7], "from": [3, 7], "dockerfil": [3, 7], "verifi": [3, 7], "gpu": [3, 7], "acceler": [3, 7], "factori": 4, "gan": 5, "packag": [5, 8, 13, 14], "submodul": [5, 8, 13, 14], "causal_gan": 5, "conditional_gan": 5, "conditional_gan_cat": 5, "conditional_gan_proj": 5, "content": [5, 8, 13, 14], "welcom": 6, "groundgan": 6, "": 6, "document": 6, "grn": [6, 19], "infer": 6, "benchmark": 6, "workflow": 6, "contact": 6, "have": 6, "question": 6, "found": 6, "bug": 6, "indic": 6, "tabl": 6, "instal": [7, 10], "local": [7, 10], "singular": [7, 16], "convert": [7, 16], "run": [7, 16], "contain": [7, 16], "layer": 8, "cbn": 8, "lsn": 8, "masked_linear": 8, "licens": 9, "main": 11, "api": 12, "refer": [12, 19], "network": 13, "critic": 13, "gener": 13, "label": 13, "masked_causal_gener": 13, "preprocess": [14, 19], "grn_creation": 14, "sc_dataset": 15, "tfrecord_load": 17, "tutori": 19, "cli": 19, "config": 19, "file": 19, "project": 19, "outlin": 19, "demo": 19, "dataset": 19, "step": 19, "creation": 19, "impos": 19, "custom": 19, "train": 19, "In": 19, "silico": 19, "singl": 19, "cell": 19, "simul": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Citation": [[1, "citation"]], "Bibtex Citation": [[1, "bibtex-citation"]], "custom_parser module": [[2, "module-custom_parser"]], "Docker Setup": [[3, "docker-setup"], [7, "docker-setup"]], "Option A: Using Pre-built Docker Image (Recommended)": [[3, "option-a-using-pre-built-docker-image-recommended"], [7, "option-a-using-pre-built-docker-image-recommended"]], "Option B: Building Docker Image from Dockerfile": [[3, "option-b-building-docker-image-from-dockerfile"], [7, "option-b-building-docker-image-from-dockerfile"]], "Verifying GPU Acceleration": [[3, "verifying-gpu-acceleration"], [7, "verifying-gpu-acceleration"]], "factory module": [[4, "module-factory"]], "gans package": [[5, "gans-package"]], "Submodules": [[5, "submodules"], [8, "submodules"], [13, "submodules"], [14, "submodules"]], "gans.causal_gan module": [[5, "module-gans.causal_gan"]], "gans.conditional_gan module": [[5, "module-gans.conditional_gan"]], "gans.conditional_gan_cat module": [[5, "module-gans.conditional_gan_cat"]], "gans.conditional_gan_proj module": [[5, "module-gans.conditional_gan_proj"]], "gans.gan module": [[5, "module-gans.gan"]], "Module contents": [[5, "module-gans"], [8, "module-layers"], [13, "module-networks"], [14, "module-preprocessing"]], "Welcome to GRouNdGAN\u2019s documentation!": [[6, "welcome-to-groundgan-s-documentation"]], "GRN inference benchmarking workflow": [[6, null]], "Contact": [[6, "contact"]], "Have a Question or Found a Bug?": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "Installation": [[7, "installation"]], "Local Installation": [[7, "id1"], [10, "local-installation"]], "Singularity Setup": [[7, "singularity-setup"], [16, "singularity-setup"]], "Converting Docker Image to Singularity": [[7, "converting-docker-image-to-singularity"], [16, "converting-docker-image-to-singularity"]], "Running a Singularity Container": [[7, "running-a-singularity-container"], [16, "running-a-singularity-container"]], "layers package": [[8, "layers-package"]], "layers.cbn module": [[8, "module-layers.cbn"]], "layers.lsn module": [[8, "module-layers.lsn"]], "layers.masked_linear module": [[8, "module-layers.masked_linear"]], "License": [[9, "license"]], "main module": [[11, "module-main"]], "API References": [[12, "api-references"]], "networks package": [[13, "networks-package"]], "networks.critic module": [[13, "module-networks.critic"]], "networks.generator module": [[13, "module-networks.generator"]], "networks.labeler module": [[13, "module-networks.labeler"]], "networks.masked_causal_generator module": [[13, "module-networks.masked_causal_generator"]], "preprocessing package": [[14, "preprocessing-package"]], "preprocessing.grn_creation module": [[14, "module-preprocessing.grn_creation"]], "preprocessing.preprocess module": [[14, "module-preprocessing.preprocess"]], "sc_dataset module": [[15, "module-sc_dataset"]], "tfrecord_loader module": [[17, "module-tfrecord_loader"]], "Tutorial": [[19, "tutorial"]], "CLI": [[19, "cli"]], "Config Files": [[19, "config-files"]], "Project outline": [[19, "project-outline"]], "Demo Datasets": [[19, "demo-datasets"]], "Steps": [[19, "steps"]], "Preprocessing": [[19, "preprocessing"]], "GRN Creation": [[19, "grn-creation"]], "Imposing Custom GRNs": [[19, "imposing-custom-grns"]], "Training": [[19, "training"]], "In-silico Single-Cell Simulation": [[19, "in-silico-single-cell-simulation"]], "References": [[19, "references"]]}, "indexentries": {"custom_parser": [[2, "module-custom_parser"]], "get_argparser() (in module custom_parser)": [[2, "custom_parser.get_argparser"]], "get_configparser() (in module custom_parser)": [[2, "custom_parser.get_configparser"]], "module": [[2, "module-custom_parser"], [4, "module-factory"], [5, "module-gans"], [5, "module-gans.causal_gan"], [5, "module-gans.conditional_gan"], [5, "module-gans.conditional_gan_cat"], [5, "module-gans.conditional_gan_proj"], [5, "module-gans.gan"], [8, "module-layers"], [8, "module-layers.cbn"], [8, "module-layers.lsn"], [8, "module-layers.masked_linear"], [11, "module-main"], [13, "module-networks"], [13, "module-networks.critic"], [13, "module-networks.generator"], [13, "module-networks.labeler"], [13, "module-networks.masked_causal_generator"], [14, "module-preprocessing"], [14, "module-preprocessing.grn_creation"], [14, "module-preprocessing.preprocess"], [15, "module-sc_dataset"], [17, "module-tfrecord_loader"]], "causalganfactory (class in factory)": [[4, "factory.CausalGANFactory"]], "conditionalcatganfactory (class in factory)": [[4, "factory.ConditionalCatGANFactory"]], "conditionalprojganfactory (class in factory)": [[4, "factory.ConditionalProjGANFactory"]], "ganfactory (class in factory)": [[4, "factory.GANFactory"]], "iganfactory (class in factory)": [[4, "factory.IGANFactory"]], "__init__() (factory.iganfactory method)": [[4, "factory.IGANFactory.__init__"]], "_abc_impl (factory.causalganfactory attribute)": [[4, "factory.CausalGANFactory._abc_impl"]], "_abc_impl (factory.conditionalcatganfactory attribute)": [[4, "factory.ConditionalCatGANFactory._abc_impl"]], "_abc_impl (factory.conditionalprojganfactory attribute)": [[4, "factory.ConditionalProjGANFactory._abc_impl"]], "_abc_impl (factory.ganfactory attribute)": [[4, "factory.GANFactory._abc_impl"]], "_abc_impl (factory.iganfactory attribute)": [[4, "factory.IGANFactory._abc_impl"]], "factory": [[4, "module-factory"]], "get_cc() (factory.causalganfactory method)": [[4, "factory.CausalGANFactory.get_cc"]], "get_factory() (in module factory)": [[4, "factory.get_factory"]], "get_gan() (factory.causalganfactory method)": [[4, "factory.CausalGANFactory.get_gan"]], "get_gan() (factory.conditionalcatganfactory method)": [[4, "factory.ConditionalCatGANFactory.get_gan"]], "get_gan() (factory.conditionalprojganfactory method)": [[4, "factory.ConditionalProjGANFactory.get_gan"]], "get_gan() (factory.ganfactory method)": [[4, "factory.GANFactory.get_gan"]], "get_gan() (factory.iganfactory method)": [[4, "factory.IGANFactory.get_gan"]], "get_trainer() (factory.causalganfactory method)": [[4, "factory.CausalGANFactory.get_trainer"]], "get_trainer() (factory.conditionalcatganfactory method)": [[4, "factory.ConditionalCatGANFactory.get_trainer"]], "get_trainer() (factory.conditionalprojganfactory method)": [[4, "factory.ConditionalProjGANFactory.get_trainer"]], "get_trainer() (factory.ganfactory method)": [[4, "factory.GANFactory.get_trainer"]], "get_trainer() (factory.iganfactory method)": [[4, "factory.IGANFactory.get_trainer"]], "parse_list() (in module factory)": [[4, "factory.parse_list"]], "causalgan (class in gans.causal_gan)": [[5, "gans.causal_gan.CausalGAN"]], "conditionalcatgan (class in gans.conditional_gan_cat)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN"]], "conditionalgan (class in gans.conditional_gan)": [[5, "gans.conditional_gan.ConditionalGAN"]], "conditionalprojgan (class in gans.conditional_gan_proj)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN"]], "gan (class in gans.gan)": [[5, "gans.gan.GAN"]], "__init__() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN.__init__"]], "__init__() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN.__init__"]], "__init__() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN.__init__"]], "__init__() (gans.gan.gan method)": [[5, "gans.gan.GAN.__init__"]], "_abc_impl (gans.conditional_gan.conditionalgan attribute)": [[5, "gans.conditional_gan.ConditionalGAN._abc_impl"]], "_abc_impl (gans.conditional_gan_cat.conditionalcatgan attribute)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._abc_impl"]], "_abc_impl (gans.conditional_gan_proj.conditionalprojgan attribute)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN._abc_impl"]], "_add_tensorboard_graph() (gans.gan.gan method)": [[5, "gans.gan.GAN._add_tensorboard_graph"]], "_build_model() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN._build_model"]], "_build_model() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._build_model"]], "_build_model() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN._build_model"]], "_build_model() (gans.gan.gan method)": [[5, "gans.gan.GAN._build_model"]], "_cat_one_hot_labels() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._cat_one_hot_labels"]], "_critic_loss() (gans.gan.gan static method)": [[5, "gans.gan.GAN._critic_loss"]], "_generate_noise() (gans.gan.gan static method)": [[5, "gans.gan.GAN._generate_noise"]], "_generate_tsne_plot() (gans.conditional_gan.conditionalgan method)": [[5, "gans.conditional_gan.ConditionalGAN._generate_tsne_plot"]], "_generate_tsne_plot() (gans.gan.gan method)": [[5, "gans.gan.GAN._generate_tsne_plot"]], "_generator_loss() (gans.gan.gan static method)": [[5, "gans.gan.GAN._generator_loss"]], "_get_gradient() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._get_gradient"]], "_get_gradient() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN._get_gradient"]], "_get_gradient() (gans.gan.gan method)": [[5, "gans.gan.GAN._get_gradient"]], "_get_loaders() (gans.gan.gan method)": [[5, "gans.gan.GAN._get_loaders"]], "_gradient_penalty() (gans.gan.gan static method)": [[5, "gans.gan.GAN._gradient_penalty"]], "_load() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN._load"]], "_load() (gans.gan.gan method)": [[5, "gans.gan.GAN._load"]], "_sample_pseudo_labels() (gans.conditional_gan.conditionalgan static method)": [[5, "gans.conditional_gan.ConditionalGAN._sample_pseudo_labels"]], "_save() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN._save"]], "_save() (gans.gan.gan method)": [[5, "gans.gan.GAN._save"]], "_set_exponential_lr() (gans.gan.gan static method)": [[5, "gans.gan.GAN._set_exponential_lr"]], "_train_critic() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._train_critic"]], "_train_critic() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN._train_critic"]], "_train_critic() (gans.gan.gan method)": [[5, "gans.gan.GAN._train_critic"]], "_train_generator() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN._train_generator"]], "_train_generator() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN._train_generator"]], "_train_generator() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN._train_generator"]], "_train_generator() (gans.gan.gan method)": [[5, "gans.gan.GAN._train_generator"]], "_train_labelers() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN._train_labelers"]], "_update_tensorboard() (gans.gan.gan method)": [[5, "gans.gan.GAN._update_tensorboard"]], "gans": [[5, "module-gans"]], "gans.causal_gan": [[5, "module-gans.causal_gan"]], "gans.conditional_gan": [[5, "module-gans.conditional_gan"]], "gans.conditional_gan_cat": [[5, "module-gans.conditional_gan_cat"]], "gans.conditional_gan_proj": [[5, "module-gans.conditional_gan_proj"]], "gans.gan": [[5, "module-gans.gan"]], "generate_cells() (gans.conditional_gan_cat.conditionalcatgan method)": [[5, "gans.conditional_gan_cat.ConditionalCatGAN.generate_cells"]], "generate_cells() (gans.conditional_gan_proj.conditionalprojgan method)": [[5, "gans.conditional_gan_proj.ConditionalProjGAN.generate_cells"]], "generate_cells() (gans.gan.gan method)": [[5, "gans.gan.GAN.generate_cells"]], "train() (gans.causal_gan.causalgan method)": [[5, "gans.causal_gan.CausalGAN.train"]], "train() (gans.gan.gan method)": [[5, "gans.gan.GAN.train"]], "conditionalbatchnorm (class in layers.cbn)": [[8, "layers.cbn.ConditionalBatchNorm"]], "lsn (class in layers.lsn)": [[8, "layers.lsn.LSN"]], "maskedlinear (class in layers.masked_linear)": [[8, "layers.masked_linear.MaskedLinear"]], "maskedlinearfunction (class in layers.masked_linear)": [[8, "layers.masked_linear.MaskedLinearFunction"]], "__init__() (layers.cbn.conditionalbatchnorm method)": [[8, "layers.cbn.ConditionalBatchNorm.__init__"]], "__init__() (layers.lsn.lsn method)": [[8, "layers.lsn.LSN.__init__"]], "__init__() (layers.masked_linear.maskedlinear method)": [[8, "layers.masked_linear.MaskedLinear.__init__"]], "_backward_cls (layers.masked_linear.maskedlinearfunction attribute)": [[8, "layers.masked_linear.MaskedLinearFunction._backward_cls"]], "_backward_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._backward_hooks"]], "_backward_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._backward_hooks"]], "_backward_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._backward_hooks"]], "_buffers (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._buffers"]], "_buffers (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._buffers"]], "_buffers (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._buffers"]], "_forward_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._forward_hooks"]], "_forward_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._forward_hooks"]], "_forward_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._forward_hooks"]], "_forward_pre_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._forward_pre_hooks"]], "_forward_pre_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._forward_pre_hooks"]], "_forward_pre_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._forward_pre_hooks"]], "_is_full_backward_hook (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._is_full_backward_hook"]], "_is_full_backward_hook (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._is_full_backward_hook"]], "_is_full_backward_hook (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._is_full_backward_hook"]], "_load_state_dict_post_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._load_state_dict_pre_hooks"]], "_modules (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._modules"]], "_modules (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._modules"]], "_modules (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._modules"]], "_non_persistent_buffers_set (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._non_persistent_buffers_set"]], "_non_persistent_buffers_set (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._non_persistent_buffers_set"]], "_non_persistent_buffers_set (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._non_persistent_buffers_set"]], "_parameters (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._parameters"]], "_parameters (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._parameters"]], "_parameters (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._parameters"]], "_state_dict_hooks (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm._state_dict_hooks"]], "_state_dict_hooks (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN._state_dict_hooks"]], "_state_dict_hooks (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear._state_dict_hooks"]], "backward() (layers.masked_linear.maskedlinearfunction static method)": [[8, "layers.masked_linear.MaskedLinearFunction.backward"]], "extra_repr() (layers.masked_linear.maskedlinear method)": [[8, "layers.masked_linear.MaskedLinear.extra_repr"]], "forward() (layers.cbn.conditionalbatchnorm method)": [[8, "layers.cbn.ConditionalBatchNorm.forward"]], "forward() (layers.lsn.lsn method)": [[8, "layers.lsn.LSN.forward"]], "forward() (layers.masked_linear.maskedlinear method)": [[8, "layers.masked_linear.MaskedLinear.forward"]], "forward() (layers.masked_linear.maskedlinearfunction static method)": [[8, "layers.masked_linear.MaskedLinearFunction.forward"]], "layers": [[8, "module-layers"]], "layers.cbn": [[8, "module-layers.cbn"]], "layers.lsn": [[8, "module-layers.lsn"]], "layers.masked_linear": [[8, "module-layers.masked_linear"]], "reapply_mask() (layers.masked_linear.maskedlinear method)": [[8, "layers.masked_linear.MaskedLinear.reapply_mask"]], "reset_parameters() (layers.masked_linear.maskedlinear method)": [[8, "layers.masked_linear.MaskedLinear.reset_parameters"]], "training (layers.cbn.conditionalbatchnorm attribute)": [[8, "layers.cbn.ConditionalBatchNorm.training"]], "training (layers.lsn.lsn attribute)": [[8, "layers.lsn.LSN.training"]], "training (layers.masked_linear.maskedlinear attribute)": [[8, "layers.masked_linear.MaskedLinear.training"]], "main": [[11, "module-main"]], "causalgenerator (class in networks.masked_causal_generator)": [[13, "networks.masked_causal_generator.CausalGenerator"]], "conditionalcritic (class in networks.critic)": [[13, "networks.critic.ConditionalCritic"]], "conditionalcriticproj (class in networks.critic)": [[13, "networks.critic.ConditionalCriticProj"]], "conditionalgenerator (class in networks.generator)": [[13, "networks.generator.ConditionalGenerator"]], "critic (class in networks.critic)": [[13, "networks.critic.Critic"]], "generator (class in networks.generator)": [[13, "networks.generator.Generator"]], "labeler (class in networks.labeler)": [[13, "networks.labeler.Labeler"]], "__init__() (networks.critic.conditionalcritic method)": [[13, "networks.critic.ConditionalCritic.__init__"]], "__init__() (networks.critic.conditionalcriticproj method)": [[13, "networks.critic.ConditionalCriticProj.__init__"]], "__init__() (networks.critic.critic method)": [[13, "networks.critic.Critic.__init__"]], "__init__() (networks.generator.conditionalgenerator method)": [[13, "networks.generator.ConditionalGenerator.__init__"]], "__init__() (networks.generator.generator method)": [[13, "networks.generator.Generator.__init__"]], "__init__() (networks.labeler.labeler method)": [[13, "networks.labeler.Labeler.__init__"]], "__init__() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator.__init__"]], "_backward_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._backward_hooks"]], "_backward_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._backward_hooks"]], "_backward_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._backward_hooks"]], "_backward_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._backward_hooks"]], "_backward_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._backward_hooks"]], "_backward_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._backward_hooks"]], "_backward_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._backward_hooks"]], "_buffers (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._buffers"]], "_buffers (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._buffers"]], "_buffers (networks.critic.critic attribute)": [[13, "networks.critic.Critic._buffers"]], "_buffers (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._buffers"]], "_buffers (networks.generator.generator attribute)": [[13, "networks.generator.Generator._buffers"]], "_buffers (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._buffers"]], "_buffers (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._buffers"]], "_create_critic() (networks.critic.conditionalcritic method)": [[13, "networks.critic.ConditionalCritic._create_critic"]], "_create_critic() (networks.critic.conditionalcriticproj method)": [[13, "networks.critic.ConditionalCriticProj._create_critic"]], "_create_critic() (networks.critic.critic method)": [[13, "networks.critic.Critic._create_critic"]], "_create_critic_block() (networks.critic.critic static method)": [[13, "networks.critic.Critic._create_critic_block"]], "_create_generator() (networks.generator.conditionalgenerator method)": [[13, "networks.generator.ConditionalGenerator._create_generator"]], "_create_generator() (networks.generator.generator method)": [[13, "networks.generator.Generator._create_generator"]], "_create_generator() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator._create_generator"]], "_create_generator_block() (networks.generator.conditionalgenerator static method)": [[13, "networks.generator.ConditionalGenerator._create_generator_block"]], "_create_generator_block() (networks.generator.generator static method)": [[13, "networks.generator.Generator._create_generator_block"]], "_create_generator_block() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator._create_generator_block"]], "_create_labeler() (networks.labeler.labeler method)": [[13, "networks.labeler.Labeler._create_labeler"]], "_create_labeler() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator._create_labeler"]], "_forward_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._forward_hooks"]], "_forward_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._forward_hooks"]], "_forward_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._forward_hooks"]], "_forward_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._forward_hooks"]], "_forward_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._forward_hooks"]], "_forward_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._forward_hooks"]], "_forward_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._forward_hooks"]], "_forward_pre_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._forward_pre_hooks"]], "_forward_pre_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._forward_pre_hooks"]], "_forward_pre_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._forward_pre_hooks"]], "_forward_pre_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._forward_pre_hooks"]], "_forward_pre_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._forward_pre_hooks"]], "_forward_pre_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._forward_pre_hooks"]], "_forward_pre_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._forward_pre_hooks"]], "_is_full_backward_hook (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._is_full_backward_hook"]], "_is_full_backward_hook (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._is_full_backward_hook"]], "_is_full_backward_hook (networks.critic.critic attribute)": [[13, "networks.critic.Critic._is_full_backward_hook"]], "_is_full_backward_hook (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._is_full_backward_hook"]], "_is_full_backward_hook (networks.generator.generator attribute)": [[13, "networks.generator.Generator._is_full_backward_hook"]], "_is_full_backward_hook (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._is_full_backward_hook"]], "_is_full_backward_hook (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._is_full_backward_hook"]], "_load_state_dict_post_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._load_state_dict_pre_hooks"]], "_modules (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._modules"]], "_modules (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._modules"]], "_modules (networks.critic.critic attribute)": [[13, "networks.critic.Critic._modules"]], "_modules (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._modules"]], "_modules (networks.generator.generator attribute)": [[13, "networks.generator.Generator._modules"]], "_modules (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._modules"]], "_modules (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._modules"]], "_non_persistent_buffers_set (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.critic.critic attribute)": [[13, "networks.critic.Critic._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.generator.generator attribute)": [[13, "networks.generator.Generator._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._non_persistent_buffers_set"]], "_non_persistent_buffers_set (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._non_persistent_buffers_set"]], "_parameters (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._parameters"]], "_parameters (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._parameters"]], "_parameters (networks.critic.critic attribute)": [[13, "networks.critic.Critic._parameters"]], "_parameters (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._parameters"]], "_parameters (networks.generator.generator attribute)": [[13, "networks.generator.Generator._parameters"]], "_parameters (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._parameters"]], "_parameters (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._parameters"]], "_state_dict_hooks (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic._state_dict_hooks"]], "_state_dict_hooks (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj._state_dict_hooks"]], "_state_dict_hooks (networks.critic.critic attribute)": [[13, "networks.critic.Critic._state_dict_hooks"]], "_state_dict_hooks (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator._state_dict_hooks"]], "_state_dict_hooks (networks.generator.generator attribute)": [[13, "networks.generator.Generator._state_dict_hooks"]], "_state_dict_hooks (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler._state_dict_hooks"]], "_state_dict_hooks (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator._state_dict_hooks"]], "forward() (networks.critic.conditionalcritic method)": [[13, "networks.critic.ConditionalCritic.forward"]], "forward() (networks.critic.conditionalcriticproj method)": [[13, "networks.critic.ConditionalCriticProj.forward"]], "forward() (networks.critic.critic method)": [[13, "networks.critic.Critic.forward"]], "forward() (networks.generator.conditionalgenerator method)": [[13, "networks.generator.ConditionalGenerator.forward"]], "forward() (networks.generator.generator method)": [[13, "networks.generator.Generator.forward"]], "forward() (networks.labeler.labeler method)": [[13, "networks.labeler.Labeler.forward"]], "forward() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator.forward"]], "freeze_causal_controller() (networks.masked_causal_generator.causalgenerator method)": [[13, "networks.masked_causal_generator.CausalGenerator.freeze_causal_controller"]], "networks": [[13, "module-networks"]], "networks.critic": [[13, "module-networks.critic"]], "networks.generator": [[13, "module-networks.generator"]], "networks.labeler": [[13, "module-networks.labeler"]], "networks.masked_causal_generator": [[13, "module-networks.masked_causal_generator"]], "training (networks.critic.conditionalcritic attribute)": [[13, "networks.critic.ConditionalCritic.training"]], "training (networks.critic.conditionalcriticproj attribute)": [[13, "networks.critic.ConditionalCriticProj.training"]], "training (networks.critic.critic attribute)": [[13, "networks.critic.Critic.training"]], "training (networks.generator.conditionalgenerator attribute)": [[13, "networks.generator.ConditionalGenerator.training"]], "training (networks.generator.generator attribute)": [[13, "networks.generator.Generator.training"]], "training (networks.labeler.labeler attribute)": [[13, "networks.labeler.Labeler.training"]], "training (networks.masked_causal_generator.causalgenerator attribute)": [[13, "networks.masked_causal_generator.CausalGenerator.training"]], "create_grn() (in module preprocessing.grn_creation)": [[14, "preprocessing.grn_creation.create_GRN"]], "preprocess() (in module preprocessing.preprocess)": [[14, "preprocessing.preprocess.preprocess"]], "preprocessing": [[14, "module-preprocessing"]], "preprocessing.grn_creation": [[14, "module-preprocessing.grn_creation"]], "preprocessing.preprocess": [[14, "module-preprocessing.preprocess"]], "scdataset (class in sc_dataset)": [[15, "sc_dataset.SCDataset"]], "__getitem__() (sc_dataset.scdataset method)": [[15, "sc_dataset.SCDataset.__getitem__"]], "__init__() (sc_dataset.scdataset method)": [[15, "sc_dataset.SCDataset.__init__"]], "__len__() (sc_dataset.scdataset method)": [[15, "sc_dataset.SCDataset.__len__"]], "get_loader() (in module sc_dataset)": [[15, "sc_dataset.get_loader"]], "sc_dataset": [[15, "module-sc_dataset"]], "get_loader() (in module tfrecord_loader)": [[17, "tfrecord_loader.get_loader"]], "tfrecord_loader": [[17, "module-tfrecord_loader"]]}})